<?php  // Moodle configuration file

/**
 Variables which should be replaced in this file
    - DbType
    - DbHost
    - DbName
    - DbUser
    - DbPwd
    - SiteDbPrefix
    - DbPort
    - DataDir
    - PhpUnitDataDir
    - PhpunitDbPrefix
    - BehatDataDir
    - BehatDbPrefix
    - FailDumpDir
    - BehatTimingFile
    - SeleniumUrl
**/

unset($CFG);
global $CFG;
$CFG = new stdClass();

/** Moodle Site config */
$CFG->dbtype    = '%%DbType%%';
$CFG->dblibrary = 'native';
$CFG->dbhost    = '%%DbHost%%';
$CFG->dbname    = '%%DbName%%';
$CFG->dbuser    = '%%DbUser%%';
$CFG->dbpass    = '%%DbPwd%%';
$CFG->prefix    = '%%SiteDbPrefix%%';
$CFG->dboptions = array (
  'dbpersist' => 0,
  'dbsocket' => 0,
  'dbport' => '%%DbPort%%'
);

// Set this as this is needed to avoid an extra dbquery to find collation.
// If you want to change it for your setup then add this to docker_env.php
if ($CFG->dbtype == 'mysqli' || $CFG->dbtype == 'mariadb') {
    $CFG->dboptions['dbcollation'] = 'utf8mb4_bin';
} else if ($CFG->dbtype == 'sqlsrv' || $CFG->dbtype == 'mssql') {
    $CFG->dboptions['dbcollation'] = 'LATIN1_GENERAL_CS_AS';
}

$CFG->wwwroot   = 'http://%%DockerContainerIp%%/moodle';
$CFG->dataroot  = '%%DataDir%%';
$CFG->admin     = 'admin';

/** Phpunit config */
$CFG->phpunit_dataroot = '%%PhpUnitDataDir%%';
$CFG->phpunit_prefix = '%%PhpunitDbPrefix%%';

/** Behat config */
$CFG->behat_wwwroot = 'http://%%DockerContainerIpBehat%%/moodle';
$CFG->behat_dataroot = '%%BehatDataDir%%';
$CFG->behat_prefix = '%%BehatDbPrefix%%';

$CFG->behat_screenshots_path = '%%FailDumpDir%%/screenshots';
$CFG->behat_faildump_path = '%%FailDumpDir%%/screenshots';
define ('BEHAT_FEATURE_TIMING_FILE', '%%BehatTimingFile%%');

$urls = explode(',', '%%Seleniumurls%%');

$basicbehatprofiles = array(
    'phantomjs' => array(
        'browser' => 'phantomjs',
        'tags' => '~@_file_upload&&~@_alert&&~@_bug_phantomjs',
    ),
    'phantomjs-selenium' => array(
        'browser' => 'phantomjs',
        'tags' => '~@_file_upload&&~@_alert&&~@_bug_phantomjs',
    ),
    'chrome' => array(
        'browser' => 'chrome',
    ),
    'firefox' => array(
        'browser' => 'firefox',
    ),
    'default' => array(
        'browser' => 'firefox',
    ),
);


// If only one selenium url passed, then set it as default profile url.
if (count($urls) == 1) {
    $basicbehatprofiles['default'] = array(
           'browser' => 'firefox',
           'wd_host' => 'http://'.$urls[0].'/wd/hub'
    );
}

$counter = 0;
for ($i = %%fromrun%%; $i < %%totalrun%%; $i++) {
    $CFG->behat_parallel_run[$i] = array ('wd_host' => 'http://'.$urls[$counter].'/wd/hub');
    if (!empty($urls[$counter+1])) {
        $counter++;
    }
}

$noofprofilestocreate = %%totalrun%%;
// Create multiple profiles, so they can be used in parallelrun --rerun
$CFG->behat_profiles = $basicbehatprofiles;
for ($i = 1; $i <= $noofprofilestocreate; $i++) {
    foreach ($basicbehatprofiles as $profile => $value) {
        $CFG->behat_profiles[$profile.$i] = $value;
    }
}

$CFG->directorypermissions = 0777;

/*
// Ldap settings:
define('TEST_AUTH_LDAP_HOST_URL', 'ldap://172.20.255.144');
define('TEST_AUTH_LDAP_BIND_DN', 'cn=admin,dc=my-domain,dc=com');
define('TEST_AUTH_LDAP_BIND_PW', 'secret');
define('TEST_AUTH_LDAP_DOMAIN', 'dc=my-domain,dc=com');

// Enrol LDAP
define('TEST_ENROL_LDAP_HOST_URL', 'ldap://172.20.255.144');
define('TEST_ENROL_LDAP_BIND_DN', 'cn=admin,dc=my-domain,dc=com');
define('TEST_ENROL_LDAP_BIND_PW', 'secret');
define('TEST_ENROL_LDAP_DOMAIN', 'dc=my-domain,dc=com');

//define('TEST_CACHE_USING_APPLICATION_STORE', 'mongodb');
define('TEST_CACHESTORE_MONGODB_TESTSERVER', 'mongodb://172.20.0.33:27017');
define('TEST_CACHESTORE_MEMCACHE_TESTSERVERS', '172.20.0.33:11211'."\n".'172.20.0.33:11212');
define('TEST_CACHESTORE_MEMCACHED_TESTSERVERS', '172.20.0.33:11211'."\n".'172.20.0.33:11212');
//define('TEST_CACHE_USING_ALT_CACHE_CONFIG_PATH', true);
//$CFG->altcacheconfigpath = '/tmp/testing-45699.cache';

//Solr
define('TEST_SEARCH_SOLR_HOSTNAME', '172.20.0.33');
define('TEST_SEARCH_SOLR_PORT', '8983');
define('TEST_SEARCH_SOLR_INDEXNAME', 'unittest');
$CFG->pathtounoconv='/usr/bin/unoconv';
*/

if (file_exists(dirname(__FILE__) . '/docker_env.php')) {
    require_once(dirname(__FILE__) . '/docker_env.php');
}

require_once(dirname(__FILE__) . '/lib/setup.php');

// There is no php closing tag in this file,
// it is intentional because it prevents trailing whitespace problems!
