# Load the config file if present.
CONFIGPATH="${SCRIPTPATH}/config"
if [ -f "${CONFIGPATH}" ]
then
  . "${CONFIGPATH}"
  echo "# Loaded configuration from  ${CONFIGPATH}"
fi

# Load defaults.
. "${INCPATH}/defaults"

# Load the include functions.
. "${INCPATH}/functions"

# Ensure that the workspace directory exists.
mkdir -p "${WORKSPACEPARENT}"

# Create the actual workspace and get a unique id.
WORKSPACE=`mktemp -d "${WORKSPACEPATTERN}"`
UNIQID=`basename "$WORKSPACE"`

# Setup the host names.
. "${INCPATH}/hostnames"

# Setup cleanup for when we finish.
function finish {
    # Clear out the workspace
    rm -rf "$WORKSPACE"

    # The DB container does not shut down automatically.
    docker container rm -f "${HOST_DB}"

    # Remove the test nestwork.
    docker network rm "${NETWORK}"
}
trap finish EXIT

# Setup the network for this test.
docker network create "${NETWORK}" > /dev/null

echo "# Job '${UNIQID}'"
echo "# Requested target ${TASK} ${TASK_ARGS}"
echo "# Requested database ${DB} (${DB_VERSION})"
echo "############################################################################"
echo ""

# Setup database.
. "${INCPATH}/database"

# Setup the codebase to be tested.
. "${INCPATH}/codebase"

# Perform setup for the specified target.
. "${INCPATH}/target"

# Start PHP and run the target.
. "${INCPATH}/php"

echo "############################################################################"
echo "# Run completed with exit code of ${EXITCODE}"
echo "############################################################################"
exit $EXITCODE
